name: "TILES"

### NETWORK ###

layer {
  type: "Python"
  name: "input_data"
  top: "data"
  top: "label"
  python_param {
    module: "input_data_layer"
    layer: "InputRead"
    param_str: "TRAIN"
  }
  include: { phase: TRAIN }
}
layer {
  type: "Python"
  name: "input_data"
  top: "data"
  top: "label"
  python_param {
    module: "input_data_layer"
    layer: "InputRead"
    param_str: "VAL"
  }
  include: { phase: TEST }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 32
    pad: 4
    kernel_size: 9
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu1"
  type: "ReLU"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 16
    pad: 4
    kernel_size: 9
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu2"
  type: "ReLU"
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv_result"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 2
    pad: 4
    kernel_size: 9
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_result"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_result"
  bottom: "label"
  top: "accuracy"
}

### END ###
